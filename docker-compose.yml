version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: warranty_db
    restart: always
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - warranty_network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db_init:/docker-entrypoint-initdb.d

  backend:
    build:
      context: ./src/backend # NOVO: KONTEKST JE SADA src/backend
      dockerfile: Dockerfile # NOVO: Dockerfile mora biti u tom kontekstu (src/backend/Dockerfile)
    container_name: warranty_backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/test"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    ports:
      - "127.0.0.1:3000:3000"
    env_file:
      - .env.production
    networks:
      - warranty_network
    volumes:
      - ./src/backend/uploads:/app/uploads
    environment:
      NODE_ENV: production

  frontend:
    build: ./src/frontend
    container_name: warranty_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "443:443"
    networks:
      - warranty_network
    volumes:
      # OVDE JE IZMENA: Mapiramo sertifikate koje Nginx koristi
      - ./certs:/etc/nginx/certs:ro

  adminer:
    image: adminer:latest
    container_name: warranty_adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - warranty_network
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DEFAULT_DATABASE: ${DB_DATABASE}

volumes:
  mysql_data: {}

networks:
  warranty_network:
    driver: bridge
