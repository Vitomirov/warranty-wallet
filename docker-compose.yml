version: '3.9'

services:
  mysql:
    image: mysql:8.0
    container_name: warranty_db
    restart: always
    env_file:
      - .env.production
    environment:
      MYSQL_ROOT_PASSWORD: Vitomirov1989
      DB_DATABASE: warranty_db
      DB_USER: devito
      DB_PASSWORD: devito
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - warranty_network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db_init:/docker-entrypoint-initdb.d

  backend:
    build: ./src/backend
    container_name: warranty_backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/test"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 120s
    env_file:
      - .env.production
    networks:
      - warranty_network
    volumes:
      - ./src/backend/uploads:/app/uploads
      - ./.env:/app/.env

  nginx:
    build: ./src/frontend/
    container_name: warranty_nginx
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    ports:
      - "443:443"
      - "80:80"
    networks:
      - warranty_network
    volumes:
      - ./src/frontend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro

  adminer:
    image: adminer:latest
    container_name: warranty_adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - warranty_network
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DEFAULT_DATABASE: ${DB_DATABASE}

volumes:
  mysql_data: {}

networks:
  warranty_network:
    driver: bridge
