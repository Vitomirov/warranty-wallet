version: '3.9'

services:
  mysql:
    image: mysql:8.0
    container_name: warranty_db_dev
    restart: always
    env_file:
      - .env.development
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_dev:/var/lib/mysql
      - ./db_init:/docker-entrypoint-initdb.d
    networks:
      - warranty_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
  
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile.dev
    container_name: warranty_backend_dev
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - .env.development
    volumes:
      - ./src/backend:/app
      - /app/node_modules
      - ./src/backend/uploads:/app/uploads
    ports:
      - "3000:3000"
    networks:
      - warranty_network

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
    container_name: warranty_frontend_dev
    restart: always
    depends_on:
      - backend
    env_file:
      - .env.development
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_APP_API_URL=http://localhost:3000 
    command: npm run dev -- --host --port 5173 --mode development
    networks:
      - warranty_network

volumes:
  mysql_data_dev:

networks:
  warranty_network:
    driver: bridge