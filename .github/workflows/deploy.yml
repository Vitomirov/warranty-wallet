name: Deploy warranty-wallet to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy warranty-wallet to VPS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (za frontend build)
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: ./src/frontend
        run: npm install

      - name: Build frontend (vite build)
        working-directory: ./src/frontend
        run: npm run build

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.CICD_DEPLOY_KEY }}

      - name: Add VPS to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 206.189.59.75 >> ~/.ssh/known_hosts

      - name: Sync frontend build to VPS
        run: |
          rsync -avz --delete ./src/frontend/dist/ root@206.189.59.75:/home/root/projects/warranty-wallet/src/frontend/dist/

      - name: Deploy backend and restart Docker services on VPS
        run: |
          ssh root@206.189.59.75 << EOF
            cd /home/root/projects/warranty-wallet
            
            # Kreiraj novi .env.production fajl sa svim potrebnim varijablama.
            # Osetljive (Secrets) se povlače iz GitHub-a, a ostale su hardkodovane.
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env.production
            echo "REFRESH_SECRET_KEY=${{ secrets.REFRESH_SECRET_KEY }}" >> .env.production
            echo "MAILGUN_SMTP_HOST=${{ secrets.MAILGUN_SMTP_HOST }}" >> .env.production
            echo "MAILGUN_SMTP_PORT=${{ secrets.MAILGUN_SMTP_PORT }}" >> .env.production
            echo "MAILGUN_SMTP_USER=${{ secrets.MAILGUN_SMTP_USER }}" >> .env.production
            echo "MAILGUN_SMTP_PASSWORD=${{ secrets.MAILGUN_SMTP_PASSWORD }}" >> .env.production
            echo "MAIL_FROM_ADDRESS=${{ secrets.MAIL_FROM_ADDRESS }}" >> .env.production
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.production
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env.production
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.production
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env.production
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env.production
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.production
            
            # Dodaj neosetljive, fiksne varijable koje nisu u Secrets
            echo "PORT=3000" >> .env.production
            echo "NODE_ENV=production" >> .env.production
            echo "VITE_API_BASE_URL=https://devitowarranty.xyz" >> .env.production
            echo "BACKEND_BASE_URL=https://devitowarranty.xyz" >> .env.production

            # Osveži backend kod na VPS-u
            git fetch --all
            git reset --hard origin/main

            # Povuci nove docker slike (mysql, adminer)
            docker compose -f docker-compose.yml pull

            # Restartuj kontejnere sa rebuild-om backend servisa
            docker compose -f docker-compose.yml down
            docker compose -f docker-compose.yml up -d --build
          EOF
